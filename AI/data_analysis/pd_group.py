import numpy as np
import pandas as pd

csv_file_path = "data_source/starbucks_store_worldwide.csv"
df = pd.read_csv(csv_file_path)

# print(df.head(3))
# print(df.info())

# 三种分组聚合的方式
# grouped_country = df.groupby(by="Country").count()["Brand"]
# grouped_country = df.groupby(by="Country")["Brand"].count()
grouped_country = df["Brand"].groupby(by=df["Country"]).count()
# print(grouped_country)
'''
Country
AD        1
AE      144
AR      108
AT       18
AU       22
AW        3
AZ        4
BE       19
... ...
'''

# 统计中国每个c城市的店铺的数量
china_starbucks = df[df["Country"]=="CN"]
grouped_province = china_starbucks.groupby(by="City").count()["Brand"].sort_values(ascending=False)
# print(grouped_province)
'''
City
上海市          542
北京市          234
杭州市          117
... ...
福州市           23
昆明市           21
'''

# 数据按照多个条件进行分组,返回Series
# grouped_country_province = df["Brand"].groupby(by=[df["Country"],df["City"]]).count().sort_values(ascending=False)
grouped_country_province = df["Brand"].groupby(by=[df["Country"],df["State/Province"]]).count()
# print(grouped_country_province)
'''
Country  State/Province
AD       7                    1
AE       AJ                   2
         AZ                  48
         DU                  82
         FU                   2
         RK                   3
         SH                   6
         ... ...
'''
# print(grouped_country_province.index)
'''
MultiIndex(levels=[['AD', 'AE', 'AR', 'AT', 'AU', 'AW', 'AZ', 'BE', 'BG', 'BH', 'BN', 'BO', 'BR', 'BS', 'CA', 'CH', 'CL', 'CN', 'CO', 'CR', 'CW', 'CY', 'CZ', 'DE', 'DK', 'EG', 'ES', 'FI', 'FR', 'GB', 'GR', 'GT', 'HU', 'ID', 'IE', 'IN', 'JO', 'JP', 'KH', 'KR', 'KW', 'KZ', 'LB', 'LU', 'MA', 'MC', 'MX', 'MY', 'NL', 'NO', 'NZ', 'OM', 'PA', 'PE', 'PH', 'PL', 'PR', 'PT', 'QA', 'RO', 'RU', 'SA', 'SE', 'SG', 'SK', 'SV', 'TH', 'TR', 'TT', 'TW', 'US', 'VN', 'ZA'], ['0', '1', '10', '11', '12', '13', '14', '15', '16', '17', '18', '19', '2', '20', '21', '22', '23', '24', '25', '26', '27', '28', '29', '3', '30', '31', '32', '33', '34', '35', '36', '37', '38', '39', '4', '40', '41', '42', '43', '44', '45', '46', '47', '48', '49', '5', '50', '51', '52', '53', '54', '55', '57', '6', '60', '61', '62', '63', '64', '65', '7', '70', '73', '74', '77', '8', '80', '81', '83', '84', '9', '90', '91', '92', 'A', 'A1', 'AB', 'AG', 'AGU', 'AH', 'AJ', 'AK', 'AL', 'ALA', 'ALX', 'AM', 'AN', 'AP', 'AR', 'ARE', 'AST', 'AW', 'AZ', 'B', 'BA', 'BB', 'BC', 'BCN', 'BCS', 'BE', 'BI', 'BL', 'BM', 'BS', 'BT', 'BU', 'BW', 'BY', 'C', 'CA', 'CAJ', 'CAM', 'CHA', 'CHH', 'CHP', 'CJ', 'CL', 'CO', 'COA', 'COL', 'CT', 'CUS', 'CW', 'CYI', 'CYQ', 'D', 'DA', 'DC', 'DE', 'DIF', 'DJ', 'DK', 'DL', 'DS', 'DU', 'DUR', 'ENG', 'ES', 'F', 'FA', 'FL', 'FR', 'FU', 'GA', 'GE', 'GR', 'GRO', 'GT', 'GU', 'GUA', 'HA', 'HB', 'HE', 'HH', 'HI', 'HID', 'HN', 'HR', 'HSQ', 'HSZ', 'HUA', 'IA', 'IB', 'ICA', 'ID', 'IL', 'ILA', 'IN', 'IR', 'IS', 'J', 'JA', 'JAL', 'JB', 'JI', 'JK', 'JM', 'JS', 'JT', 'JUN', 'JW', 'K', 'KA', 'KDA', 'KEE', 'KHH', 'KI', 'KS', 'KU', 'KY', 'L', 'LA', 'LAL', 'LAM', 'LD', 'LI', 'LIM', 'LU', 'M', 'MA', 'MB', 'MC', 'MD', 'ME', 'MH', 'MI', 'MIA', 'MIC', 'MN', 'MO', 'MOR', 'MOS', 'MOW', 'MS', 'MT', 'MU', 'MX', 'MZ', 'N', 'NAN', 'NAY', 'NB', 'NC', 'ND', 'NE', 'NH', 'NI', 'NIR', 'NJ', 'NL', 'NLE', 'NM', 'NS', 'NSW', 'NU', 'NV', 'NW', 'NY', 'O', 'OAX', 'OH', 'OK', 'ON', 'OR', 'OV', 'PA', 'PE', 'PEN', 'PH', 'PIF', 'PIU', 'PM', 'POS', 'PR', 'PUE', 'QC', 'QLD', 'QUE', 'R', 'RI', 'RJ', 'RK', 'RM', 'ROO', 'ROS', 'RP', 'S', 'SA', 'SAB', 'SAM', 'SC', 'SCT', 'SD', 'SFO', 'SG', 'SH', 'SIN', 'SJ', 'SK', 'SL', 'SLP', 'SM', 'SN', 'SON', 'SP', 'SPE', 'SS', 'SU', 'SVE', 'TAB', 'TAM', 'TAO', 'TH', 'TM', 'TN', 'TNN', 'TNQ', 'TPE', 'TPQ', 'TTT', 'TU', 'TX', 'TXG', 'TXQ', 'TYU', 'U', 'UP', 'UQ', 'UT', 'V', 'VA', 'VAN', 'VBR', 'VD', 'VER', 'VIC', 'VLG', 'VS', 'VT', 'WA', 'WAL', 'WI', 'WLS', 'WP', 'WV', 'WY', 'X', 'YAR', 'YO', 'YT', 'YUC', 'YUN', 'Z', 'ZAB', 'ZAC', 'ZG', 'ZH', 'ZP']],
           codes=[[0, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 3, 3, 3, 4, 4, 4, 5, 6, 6, 7, 7, 7, 7, 7, 8, 8, 9, 9, 9, 10, 10, 10, 11, 12, 12, 13, 13, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 16, 16, 16, 16, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 18, 19, 19, 20, 21, 21, 21, 21, 22, 22, 22, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 24, 24, 24, 24, 24, 25, 25, 25, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 27, 27, 27, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 29, 29, 29, 29, 30, 30, 30, 30, 31, 32, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 34, 34, 34, 35, 35, 35, 35, 35, 35, 35, 36, 36, 37, 37, 37, 37, 37, 37, 37, 37, 37, 37, 37, 37, 37, 37, 37, 37, 37, 37, 37, 37, 37, 37, 37, 37, 37, 37, 37, 37, 37, 37, 37, 37, 37, 37, 37, 37, 37, 37, 37, 37, 37, 37, 37, 37, 37, 37, 37, 38, 39, 39, 39, 39, 39, 39, 39, 39, 39, 39, 39, 39, 39, 39, 39, 39, 40, 40, 40, 40, 40, 40, 41, 41, 42, 42, 42, 43, 44, 44, 45, 46, 46, 46, 46, 46, 46, 46, 46, 46, 46, 46, 46, 46, 46, 46, 46, 46, 46, 46, 46, 46, 46, 46, 46, 46, 46, 46, 46, 46, 46, 46, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 48, 48, 48, 48, 48, 48, 48, 49, 49, 49, 49, 49, 49, 49, 50, 50, 51, 51, 52, 52, 53, 53, 53, 53, 53, 53, 53, 53, 53, 54, 54, 54, 54, 54, 54, 54, 54, 54, 54, 55, 55, 55, 55, 55, 55, 55, 55, 56, 57, 57, 57, 58, 59, 59, 59, 59, 59, 59, 59, 59, 60, 60, 60, 60, 60, 60, 60, 60, 60, 61, 61, 61, 61, 61, 61, 62, 62, 62, 62, 63, 63, 63, 63, 63, 64, 65, 65, 65, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 67, 67, 67, 67, 67, 67, 67, 67, 67, 67, 67, 67, 67, 67, 67, 67, 67, 67, 67, 67, 67, 67, 67, 67, 68, 68, 68, 69, 69, 69, 69, 69, 69, 69, 69, 69, 69, 69, 69, 69, 69, 69, 69, 69, 69, 69, 69, 69, 69, 70, 70, 70, 70, 70, 70, 70, 70, 70, 70, 70, 70, 70, 70, 70, 70, 70, 70, 70, 70, 70, 70, 70, 70, 70, 70, 70, 70, 70, 70, 70, 70, 70, 70, 70, 70, 70, 70, 70, 70, 70, 70, 70, 70, 70, 70, 70, 70, 70, 70, 70, 71, 71, 72], [60, 80, 92, 134, 142, 261, 275, 307, 93, 108, 198, 266, 326, 23, 45, 70, 233, 256, 315, 91, 94, 268, 99, 311, 312, 316, 320, 12, 16, 5, 6, 7, 99, 102, 300, 266, 260, 284, 100, 232, 76, 96, 200, 221, 229, 232, 242, 246, 255, 278, 329, 77, 99, 103, 141, 144, 197, 274, 313, 335, 336, 100, 195, 262, 317, 3, 4, 5, 6, 7, 14, 15, 16, 25, 26, 27, 28, 29, 30, 31, 36, 37, 38, 39, 40, 41, 46, 47, 48, 49, 55, 56, 57, 58, 72, 73, 127, 74, 277, 122, 1, 12, 23, 45, 176, 209, 253, 95, 99, 106, 107, 151, 152, 153, 226, 236, 265, 275, 279, 282, 292, 7, 67, 68, 69, 131, 84, 108, 177, 76, 86, 100, 108, 116, 120, 162, 198, 199, 202, 215, 286, 332, 333, 10, 12, 137, 74, 93, 108, 125, 138, 170, 181, 218, 238, 258, 266, 305, 309, 136, 227, 271, 322, 75, 93, 190, 198, 148, 105, 94, 104, 173, 174, 175, 178, 180, 182, 186, 234, 259, 279, 281, 282, 286, 287, 328, 108, 190, 198, 87, 132, 157, 182, 204, 294, 306, 85, 168, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 45, 53, 60, 65, 70, 4, 3, 19, 20, 21, 22, 24, 25, 36, 37, 38, 39, 40, 41, 42, 43, 44, 79, 139, 150, 171, 188, 215, 83, 90, 94, 100, 171, 190, 3, 199, 201, 78, 97, 98, 111, 113, 114, 118, 119, 129, 135, 146, 149, 155, 172, 207, 210, 216, 220, 230, 239, 254, 257, 263, 276, 280, 283, 289, 290, 314, 330, 334, 1, 2, 4, 5, 6, 7, 8, 12, 34, 45, 53, 60, 65, 144, 145, 221, 225, 244, 308, 336, 3, 4, 8, 9, 12, 23, 53, 218, 266, 199, 215, 1, 65, 89, 110, 121, 163, 179, 192, 193, 196, 250, 0, 1, 2, 23, 35, 36, 45, 53, 60, 248, 133, 194, 199, 217, 251, 279, 323, 337, 253, 1, 3, 5, 126, 93, 96, 115, 120, 130, 169, 248, 293, 183, 211, 212, 264, 269, 285, 288, 304, 327, 1, 12, 23, 34, 53, 60, 76, 108, 238, 305, 1, 12, 23, 34, 45, 101, 195, 267, 286, 2, 3, 4, 5, 6, 8, 13, 14, 17, 24, 25, 26, 28, 35, 36, 38, 39, 40, 46, 48, 52, 54, 59, 61, 62, 63, 64, 66, 67, 68, 69, 71, 266, 1, 2, 3, 8, 9, 13, 14, 19, 20, 23, 25, 26, 27, 28, 29, 32, 36, 37, 43, 50, 51, 53, 60, 70, 112, 252, 273, 112, 123, 124, 158, 159, 160, 166, 184, 185, 206, 219, 247, 249, 291, 295, 296, 297, 298, 299, 302, 303, 331, 81, 82, 88, 92, 109, 117, 120, 127, 128, 140, 143, 154, 161, 164, 165, 167, 187, 189, 191, 199, 202, 203, 205, 208, 209, 213, 214, 222, 223, 224, 225, 228, 231, 235, 237, 240, 241, 243, 245, 259, 270, 272, 294, 301, 308, 310, 318, 319, 321, 324, 325, 156, 274, 147]],
           names=['Country', 'State/Province'])
'''

# 数据按照多个条件进行分组,返回DataFrame
# grouped_country_province2 = df[["Brand"]].groupby(by=[df["Country"],df["State/Province"]]).count()
# grouped_country_province2 = df.groupby(by=["Country","State/Province"]).count()[["Brand"]]
grouped_country_province2 = df.groupby(by=["Country","State/Province"])[["Brand"]].count()
print(grouped_country_province2)
'''
                        Brand
Country State/Province       
AD      7                   1
AE      AJ                  2
        AZ                 48
        DU                 82
        FU                  2
'''